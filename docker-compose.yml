version: "3.1"

services:

  nginx:
    build: ./nginx
    ports:
      - 8080:80
    volumes:
      - static_volume:/home/app/employees/static
    depends_on:
      - web
    restart: "on-failure"

  db:
    restart: always
    image: postgres
    container_name: demo-postgres 
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./initialize_db.sql:/docker-entrypoint-initdb.d/initialize_db.sql
    restart: "on-failure"

  pgadmin:
      image: dpage/pgadmin4
      container_name: demo-pgadmin 
      depends_on:
        - db
      ports:
        - "5051:80"
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      restart: "on-failure"

  web:
      build: .
      command: >
        sh -c "sleep 20 &&
              export DJANGO_SUPERUSER_PASSWORD=$DJANGO_SUPERUSER_PASSWORD &&
              python manage.py makemigrations --noinput &&
              python manage.py migrate --noinput &&
              python manage.py collectstatic --noinput &&
              python manage.py createsuperuser \
                  --no-input \
                  --username $DJANGO_SUPERUSER_USERNAME \
                  --email $DJANGO_SUPERUSER_EMAIL &&
              gunicorn --bind 0.0.0.0:8000 employees_manager.wsgi:application"

      volumes:
        - static_volume:/home/app/employees/static
      expose: 
        - 8000    
      depends_on:
        - db
      restart: "on-failure"

volumes:
  postgres_data:
  static_volume: